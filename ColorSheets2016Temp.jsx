// Product: NIKE Golf RGB Color Assignment// Created by Matthew Hauth, PGA & Microbrew Media, LLC// Web: www.MicrobrewMedia.com// Version: 1.0.2// Description: Run via InDesign CC after Swatches have been imported + DataMerge has been completed on Master Template// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR// PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE// FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER// DEALINGS IN THE SOFTWARE.#target indesignmain(); // Run the Functionfunction main() {  var theDoc = app.activeDocument; // active doc  var thePage = theDoc.pages.item(0); // first page  var totalPages = theDoc.pages.length;  var endingPage = totalPages - 1;  var startingPage = 1022; // The desired number of the first actual page  var actualStartPage = startingPage - 1;  var actualPage = startingPage;  var theLayers = theDoc.layers;  var layersTotal = theLayers.length;  var startLayer = 0; // really the first layers theLayers.item(0)  var endLayer = layersTotal;  var currentLayer = theDoc.activeLayer;  var theSwatches = theDoc.swatches;  var cSwatches = theSwatches.everyItem().name.join("@$@");  app.activeWindow.activePage = app.activeDocument.pages.item(actualStartPage); // Set Active Page  theDoc.activeLayer = theDoc.layers[0]; // Set to Bottom Layer 0    function findSwatch(PartOfName) {    rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g; // Clear a few Unicode Characters    PartOfName = PartOfName.replace(rtrim, ''); // Adjust PartOfName without Unicode Characters    var cIndex = cSwatches.search(PartOfName), cSwatch;    if (cIndex == -1) return false;    cIndex = cSwatches.slice(0, cIndex).split("@$@").length - 1;    return cIndex;  }  for (var p = actualStartPage; p <= endingPage; p++) {    thePage = app.activeDocument.pages.item(p);    var primaryColorCode = thePage.textFrames.item("Primary Color Code").contents.toLowerCase();    var secondaryColorCode = thePage.textFrames.item("Secondary Color Code").contents.toLowerCase();    var accentColorCode = thePage.textFrames.item("Accent Color Code").contents.toLowerCase();    var matchGarmentColorCode = thePage.textFrames.item("Match to Garment Color Code").contents.toLowerCase();    var lightTonalColorCode = thePage.textFrames.item("Light Tonal Color Code").contents.toLowerCase();    var darkTonalColorCode = thePage.textFrames.item("Dark Tonal Color Code").contents.toLowerCase();    var neutralColorCode = thePage.textFrames.item("Neutral Color Code").contents.toLowerCase();    var greenColorCode = thePage.textFrames.item("Green Color Code").contents.toLowerCase();    var matchSwooshColorCode = thePage.textFrames.item("Match to Swoosh Color Code").contents.toLowerCase();        // Two Toned Shirt    var primary2ColorCode = thePage.textFrames.item("Primary 2 Color Code").contents.toLowerCase();    var secondary2ColorCode = thePage.textFrames.item("Secondary 2 Color Code").contents.toLowerCase();    var accent2ColorCode = thePage.textFrames.item("Accent 2 Color Code").contents.toLowerCase();    var matchGarment2ColorCode = thePage.textFrames.item("Match to Garment 2 Color Code").contents.toLowerCase();    var lightTonal2ColorCode = thePage.textFrames.item("Light Tonal 2 Color Code").contents.toLowerCase();    var darkTonal2ColorCode = thePage.textFrames.item("Dark Tonal 2 Color Code").contents.toLowerCase();    var neutral2ColorCode = thePage.textFrames.item("Neutral 2 Color Code").contents.toLowerCase();    var green2ColorCode = thePage.textFrames.item("Green 2 Color Code").contents.toLowerCase();    var matchSwoosh2ColorCode = thePage.textFrames.item("Match to Swoosh 2 Color Code").contents.toLowerCase();            if (app.activeDocument.pages.item(p).isValid == true) {      app.activeWindow.activePage = app.activeDocument.pages.item(p);    }    // Let the real fun begin    for (var i = startLayer; i < endLayer; i++) {      theDoc.activeLayer = theDoc.layers[i];      currentLayer = theDoc.activeLayer;        switch (currentLayer.name){            case "Main" :                if (primary2ColorCode.length < 5 ) {                thePage.textFrames.item("Primary 2 Color Code").remove();                 thePage.textFrames.item("Primary 2 Title").remove();                thePage.ovals.itemByName("Primary 2 Shape").remove();                // If Primary isn't Present Delete Color Coordinate Title                thePage.textFrames.item("Secondary Palette").remove();                }                if (secondary2ColorCode.length < 5 ) {                thePage.textFrames.item("Secondary 2 Color Code").remove();                 thePage.textFrames.item("Secondary 2 Title").remove();                thePage.ovals.itemByName("Secondary 2 Shape").remove();                }                       if (accent2ColorCode.length < 5 ) {                thePage.textFrames.item("Accent 2 Color Code").remove();                 thePage.textFrames.item("Accent 2 Title").remove();                thePage.ovals.itemByName("Accent 2 Shape").remove();                }                       if (matchGarment2ColorCode.length < 5 ) {                thePage.textFrames.item("Match to Garment 2 Color Code").remove();                 thePage.textFrames.item("Match to Garment 2 Title").remove();                thePage.ovals.itemByName("Match to Garment 2 Shape").remove();                }                            if (lightTonal2ColorCode.length < 5 ) {                thePage.textFrames.item("Light Tonal 2 Color Code").remove();                 thePage.textFrames.item("Light Tonal 2 Title").remove();                thePage.ovals.itemByName("Light Tonal 2 Shape").remove();                }                       if (darkTonal2ColorCode.length < 5 ) {                thePage.textFrames.item("Dark Tonal 2 Color Code").remove();                 thePage.textFrames.item("Dark Tonal 2 Title").remove();                thePage.ovals.itemByName("Dark Tonal 2 Shape").remove();                }                       if (neutral2ColorCode.length < 5 ) {                thePage.textFrames.item("Neutral 2 Color Code").remove();                 thePage.textFrames.item("Neutral 2 Title").remove();                thePage.ovals.itemByName("Neutral 2 Shape").remove();                }                      if (green2ColorCode.length < 5 ) {                thePage.textFrames.item("Green 2 Color Code").remove();                 thePage.textFrames.item("Green 2 Title").remove();                thePage.ovals.itemByName("Green 2 Shape").remove();                }                      if (matchSwoosh2ColorCode.length < 5 ) {                thePage.textFrames.item("Match to Swoosh 2 Color Code").remove();                 thePage.textFrames.item("Match to Swoosh 2 Title").remove();                thePage.ovals.itemByName("Match to Swoosh 2 Shape").remove();                }        }    }                // Let the real fun begin    for (var i = startLayer; i < endLayer; i++) {      theDoc.activeLayer = theDoc.layers[i];      currentLayer = theDoc.activeLayer;        switch (currentLayer.name){            case "Primary" :                if (primary2ColorCode == "") {                thePage.textFrames.item("Primary 2 Color Code").remove();                 thePage.textFrames.item("Primary 2 Title").remove();                thePage.ovals.itemByName("Primary 2 Shape").remove();                }                if (primaryColorCode != "") {                  primarySwatch = findSwatch(primaryColorCode);                  thePage.ovals.itemByName("Primary Shape").fillColor = theDoc.swatches[primarySwatch];                }            case "Secondary":                if (secondary2ColorCode == "") {                thePage.textFrames.item("Secondary 2 Color Code").remove();                 thePage.textFrames.item("Secondary 2 Title").remove();                thePage.ovals.itemByName("Secondary 2 Shape").remove();                }                                if (secondaryColorCode != "") {                  secondarySwatch = findSwatch(secondaryColorCode);                  thePage.ovals.itemByName("Secondary Shape").fillColor = theDoc.swatches[secondarySwatch];                }            case "Accent":                if (accentColorCode != "") {                  accentSwatch = findSwatch(accentColorCode);                  thePage.ovals.itemByName("Accent Shape").fillColor = theDoc.swatches[accentSwatch];                }            case "Match to Garment":                if (matchGarmentColorCode != "") {                  matchToGarmentSwatch = findSwatch(matchGarmentColorCode);                  thePage.ovals.itemByName("Match to Garment Shape").fillColor = theDoc.swatches[matchToGarmentSwatch];                  thePage.rectangles.itemByName("Match to Garment Square").fillColor = theDoc.swatches[matchToGarmentSwatch];                }            case "Light Tonal":                if (lightTonalColorCode != "") {                  lightTonalSwatch = findSwatch(lightTonalColorCode);                  thePage.ovals.itemByName("Light Tonal Shape").fillColor = theDoc.swatches[lightTonalSwatch];                }            case "Dark Tonal":                if (darkTonalColorCode != "") {                  darkTonalSwatch = findSwatch(darkTonalColorCode);                  thePage.ovals.itemByName("Dark Tonal Shape").fillColor = theDoc.swatches[darkTonalSwatch];                }            case "Neutral":                if (neutralColorCode != "") {                  neutralSwatch = findSwatch(neutralColorCode);                  thePage.ovals.itemByName("Neutral Shape").fillColor = theDoc.swatches[neutralSwatch];                }            case "Green":                if (greenColorCode != "") {                  greenSwatch = findSwatch(greenColorCode);                  thePage.ovals.itemByName("Green Shape").fillColor = theDoc.swatches[greenSwatch];                }            case "Match to Swoosh":                 if (matchSwooshColorCode != "") {                  matchToSwooshSwatch = findSwatch(matchSwooshColorCode);                  thePage.ovals.itemByName("Match to Swoosh Shape").fillColor = theDoc.swatches[matchToSwooshSwatch];                  thePage.polygons.itemByName("Match to Swoosh Swoosh").fillColor = theDoc.swatches[matchToSwooshSwatch];                }            case "Main":                if (primary2ColorCode != "" && primary2ColorCode.length > 5) {                  primary2Swatch = findSwatch(primary2ColorCode);                  if (primary2Swatch === 'undefined' || primary2Swatch === false ) {} else{                    thePage.ovals.itemByName("Primary 2 Shape").fillColor = theDoc.swatches[primary2Swatch];                  }                }                if (secondary2ColorCode != "" && secondary2ColorCode.length > 5) {                  secondary2Swatch = findSwatch(secondary2ColorCode);                  if (secondary2Swatch === 'undefined' || secondary2Swatch === false) {} else {                    thePage.ovals.itemByName("Secondary 2 Shape").fillColor = theDoc.swatches[secondary2Swatch];                  }                }                if (accent2ColorCode != "" && accent2ColorCode.length > 5) {                  accent2Swatch = findSwatch(accent2ColorCode);                  if (accent2Swatch === 'undefined' || accent2Swatch === false) {} else {                    thePage.ovals.itemByName("Accent 2 Shape").fillColor = theDoc.swatches[accent2Swatch];                  }                }                if (matchGarment2ColorCode != "" && matchGarment2ColorCode.length > 5) {                  matchToGarment2Swatch = findSwatch(matchGarment2ColorCode);                  if (matchToGarment2Swatch === 'undefined'  || matchToGarment2Swatch === false ) {} else{                    thePage.ovals.itemByName("Match to Garment 2 Shape").fillColor = theDoc.swatches[matchToGarment2Swatch];                  }                }                if (lightTonal2ColorCode != "" && lightTonal2ColorCode.length > 5) {                  lightTonal2Swatch = findSwatch(lightTonal2ColorCode);                  if (lightTonal2Swatch === 'undefined' || lightTonal2Swatch === false ) {} else {                      thePage.ovals.itemByName("Light Tonal 2 Shape").fillColor = theDoc.swatches[lightTonal2Swatch];                  }                }                if (darkTonal2ColorCode != "" && darkTonal2ColorCode.length > 5) {                  darkTonal2Swatch = findSwatch(darkTonal2ColorCode);                  if (darkTonal2Swatch === 'undefined' || darkTonal2Swatch === false ) {} else{                    thePage.ovals.itemByName("Dark Tonal 2 Shape").fillColor = theDoc.swatches[darkTonal2Swatch];                  }                }                if (neutral2ColorCode != "" && neutral2ColorCode.length > 5) {                  neutral2Swatch = findSwatch(neutral2ColorCode);                  if (neutral2Swatch === 'undefined' ||  neutral2Swatch === false ) {} else{                    thePage.ovals.itemByName("Neutral 2 Shape").fillColor = theDoc.swatches[neutral2Swatch];                  }                }                if (green2ColorCode != "" && green2ColorCode.length > 5) {                  green2Swatch = findSwatch(green2ColorCode);                  if (green2Swatch === 'undefined' || green2Swatch === false ) {} else{                    thePage.ovals.itemByName("Green 2 Shape").fillColor = theDoc.swatches[green2Swatch];                  }                }                if (matchSwoosh2ColorCode != "" && matchSwoosh2ColorCode.length > 5) {                  matchToSwoosh2Swatch = findSwatch(matchSwoosh2ColorCode);                  if (matchToSwoosh2Swatch === 'undefined' || matchToSwoosh2Swatch === false ) {} else{                    thePage.ovals.itemByName("Match to Swoosh 2 Shape").fillColor = theDoc.swatches[matchToSwoosh2Swatch];                 }                }            }        }    }    actualPage++;}